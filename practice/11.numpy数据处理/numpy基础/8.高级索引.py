#整数和切片的索引，数组可以由整数数组索引、布尔索引及花式索引。
import numpy as np
#获取数组中(0,0)，(1,1)和(2,0)位置处的元素。
x = np.array([[1,  2],  [3,  4],  [5,  6]])
y = x[[0 ,1 ,2],  [0 ,1 ,0]]
print (y)
print("---------------")


#获取了 4X3 数组中的四个角的元素。 行索引是 [0,0] 和 [3,3]，而列索引是 [0,2] 和 [0,2]。
x = np.array([[  0,  1,  2],[  3,  4,  5],[  6,  7,  8],[  9,  10,  11]])
print ('我们的数组是：' )
print (x)
print ('\n')
rows = np.array([[0,0],[3,3]])
cols = np.array([[0,2],[0,2]])
y = x[rows,cols]
print  ('这个数组的四个角元素是：')
print (y)
print("---------------")

#: 或 … 与索引数组组合
a = np.array([[1,2,3], [4,5,6],[7,8,9]])
b = a[1:3, 1:3]
c = a[1:3,[1,2]]                    # 1:3行  1,2列
d = a[...,1:]
print(b)
print(c)
print(d)
print("---------------")


#布尔索引
#获取大于 5 的元素
x = np.array([[  0,  1,  2],[  3,  4,  5],[  6,  7,  8],[  9,  10,  11]])
print ('我们的数组是：')
print (x)
print ('\n')
# 现在我们会打印出大于 5 的元素
print  ('大于 5 的元素是：')
print (x[x >  5])
print("---------------")

#实例使用了 ~（取补运算符）来过滤 NaN。
a = np.array([np.nan,  1,2,np.nan,3,4,5])
print (a[~np.isnan(a)])
print("---------------")

#实例演示如何从数组中过滤掉非复数元素。
a = np.array([1,  2+6j,  5,  3.5+5j])
print (a[np.iscomplex(a)])
print("---------------")


#花式索引
#1、传入顺序索引数组
x=np.arange(32).reshape((8,4))
print (x[[4,2,1,7]])
print("---------------")

#2、传入倒序索引数组
x=np.arange(32).reshape((8,4))
print (x[[-4,-2,-1,-7]])
print("---------------")

#3、传入多个索引数组（要使用np.ix_）
x=np.arange(32).reshape((8,4))
print (x[np.ix_([1,5,7,2],[0,3,1,2])])

